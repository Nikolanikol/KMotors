import { NextRequest, NextResponse } from 'next/server'
import { getAuthAdmin } from '@/lib/auth'
import { getCarById, updateCar, deleteCar } from '@/lib/db'

// =====================================================
// GET /api/cars/[id] - –ø–æ–ª—É—á–∏—Ç—å –æ–¥–Ω–æ –∞–≤—Ç–æ
// =====================================================
export async function GET(
  req: NextRequest,
  { params }: { params: Promise<{ id: string }> }
) {
  try {
    const { id } = await params
    console.log(`üìñ [GET /api/cars/${id}] –ü–æ–ª—É—á–∞–µ–º –∞–≤—Ç–æ...`)

    const car = await getCarById(id)

    if (!car) {
      console.log(`‚ùå [GET] –ê–≤—Ç–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ: ${id}`)
      return NextResponse.json(
        { error: '–ê–≤—Ç–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ' },
        { status: 404 }
      )
    }

    console.log(`‚úÖ [GET] –ê–≤—Ç–æ –Ω–∞–π–¥–µ–Ω–æ: ${car.brand} ${car.model}`)
    return NextResponse.json(car)
  } catch (error) {
    console.error('‚ùå [GET] –û—à–∏–±–∫–∞:', error)
    return NextResponse.json(
      { error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∞–≤—Ç–æ' },
      { status: 500 }
    )
  }
}

// =====================================================
// PUT /api/cars/[id] - —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∞–≤—Ç–æ (—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω)
// =====================================================
export async function PUT(
  req: NextRequest,
  { params }: { params: Promise<{ id: string }> }
) {
  try {
    console.log('üîê [PUT] –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é...')
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    const admin = await getAuthAdmin()
    if (!admin) {
      console.log('‚ùå [PUT] –ê–¥–º–∏–Ω –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω')
      return NextResponse.json(
        { error: '–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω' },
        { status: 401 }
      )
    }

    console.log(`‚úÖ [PUT] –ê–¥–º–∏–Ω –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω: ${admin.email}`)

    const { id } = await params
    console.log(`‚úèÔ∏è [PUT /api/cars/${id}] –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –∞–≤—Ç–æ...`)

    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    const body = await req.json()
    console.log(`üì¶ [PUT] –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ:`, Object.keys(body))

    // –§–æ—Ä–º–∏—Ä—É–µ–º –æ–±—ä–µ–∫—Ç —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ (—Ç–æ–ª—å–∫–æ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ –ø–æ–ª—è)
    const updates: any = {}

    if (body.brand !== undefined) updates.brand = body.brand
    if (body.model !== undefined) updates.model = body.model
    if (body.badge !== undefined) updates.badge = body.badge
    if (body.year !== undefined) updates.year = body.year
    if (body.price !== undefined) updates.price = body.price
    if (body.mileage !== undefined) updates.mileage = body.mileage
    if (body.vin !== undefined) updates.vin = body.vin
    if (body.fuel !== undefined) updates.fuel = body.fuel
    if (body.transmission !== undefined) updates.transmission = body.transmission
    if (body.description !== undefined) updates.description = body.description
    if (body.image_urls !== undefined) updates.image_urls = body.image_urls
    if (body.status !== undefined) updates.status = body.status

    console.log(`‚è≥ [PUT] –û–±–Ω–æ–≤–ª—è–µ–º –≤ –ë–î:`, Object.keys(updates))

    // –û–±–Ω–æ–≤–ª—è–µ–º –∞–≤—Ç–æ –≤ –ë–î
    const updatedCar = await updateCar(id, updates)

    console.log(`‚úÖ [PUT] –ê–≤—Ç–æ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: ${updatedCar.brand} ${updatedCar.model}`)
    
    return NextResponse.json(updatedCar, { status: 200 })
  } catch (error) {
    console.error('‚ùå [PUT] –û—à–∏–±–∫–∞:', error)
    
    let errorMessage = '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∞–≤—Ç–æ'
    if (error instanceof Error) {
      errorMessage = error.message
    }

    return NextResponse.json(
      { error: errorMessage },
      { status: 500 }
    )
  }
}

// =====================================================
// DELETE /api/cars/[id] - —É–¥–∞–ª–∏—Ç—å –∞–≤—Ç–æ (—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω)
// =====================================================
export async function DELETE(
  req: NextRequest,
  { params }: { params: Promise<{ id: string }> }
) {
  try {
    console.log('üîê [DELETE] –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é...')

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    const admin = await getAuthAdmin()
    if (!admin) {
      console.log('‚ùå [DELETE] –ê–¥–º–∏–Ω –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω')
      return NextResponse.json(
        { error: '–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω' },
        { status: 401 }
      )
    }

    console.log(`‚úÖ [DELETE] –ê–¥–º–∏–Ω –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω: ${admin.email}`)

    const { id } = await params
    console.log(`üóëÔ∏è [DELETE /api/cars/${id}] –ù–∞—á–∏–Ω–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ...`)

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∞–≤—Ç–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    console.log(`üîç [DELETE] –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∞–≤—Ç–æ: ${id}`)
    const car = await getCarById(id)
    
    if (!car) {
      console.log(`‚ùå [DELETE] –ê–≤—Ç–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ: ${id}`)
      return NextResponse.json(
        { error: '–ê–≤—Ç–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ' },
        { status: 404 }
      )
    }

    console.log(`üìã [DELETE] –ù–∞–π–¥–µ–Ω–æ –∞–≤—Ç–æ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: ${car.brand} ${car.model}`)

    // –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ –∏–∑ –ë–î
    console.log(`‚è≥ [DELETE] –£–¥–∞–ª—è–µ–º –∏–∑ –ë–î...`)
    await deleteCar(id)

    console.log(`‚úÖ [DELETE] –ê–≤—Ç–æ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ: ${car.brand} ${car.model}`)
    
    return NextResponse.json(
      { 
        message: '–ê–≤—Ç–æ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ',
        deleted_car: {
          id: car.id,
          brand: car.brand,
          model: car.model
        }
      },
      { status: 200 }
    )
  } catch (error) {
    console.error('‚ùå [DELETE] –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error)
    
    let errorMessage = '–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∞–≤—Ç–æ'
    if (error instanceof Error) {
      errorMessage = error.message
    }

    return NextResponse.json(
      { error: errorMessage },
      { status: 500 }
    )
  }
}