"use client";

import { useEffect, useRef, useState } from "react";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { SlidingButton } from "@/components/ui/button";
import { usePathname } from "next/navigation";

import {
  Dialog,
  DialogContent,
  DialogHeader,
  DialogTitle,
  DialogDescription,
} from "@/components/ui/dialog";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "../ui/select";
import SocialRow from "../ui/SocialRow";

export default function ContactForm({ isVisible }: { isVisible: boolean }) {
  // ========== –°–û–°–¢–û–Ø–ù–ò–ï ==========
  const [visible, setVisible] = useState(isVisible);
  const [loading, setLoading] = useState(false);
  const [success, setSuccess] = useState(false);

  // ‚úÖ FIX: –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –ø—É—Ç—å —á—Ç–æ–±—ã –Ω–µ —Ç—Ä–∏–≥–≥–µ—Ä–∏—Ç—å –≤ –∞–¥–º–∏–Ω–∫–µ
  const pathname = usePathname();

  // ========== REFS ==========
  // ‚úÖ FIX: –ò—Å–ø–æ–ª—å–∑—É–µ–º useRef –¥–ª—è —Ñ–ª–∞–≥–∞ (–æ–Ω –Ω–µ –±—É–¥–µ—Ç –ø–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞—Ç—å—Å—è)
  const hasTriggeredRef = useRef(false);
  const timerRef = useRef<NodeJS.Timeout | null>(null);

  // ========== –§–û–†–ú–ê ==========
  const [form, setForm] = useState({
    name: "",
    phone: "",
    email: "",
    message: "",
    method: "",
  });

  // ========== –¢–ê–ô–ú–ï–† –î–õ–Ø –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ì–û –ü–û–ö–ê–ó–ê ==========
  useEffect(() => {
    // ‚úÖ FIX: –ï—Å–ª–∏ —É–∂–µ –ø–æ–∫–∞–∑—ã–≤–∞–ª–∏ –∏–ª–∏ —è–≤–Ω–æ –æ—Ç–∫—Ä—ã—Ç–∞ - –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–Ω–æ–≤–∞
    if (hasTriggeredRef.current || isVisible) {
      return;
    }
    // ‚úÖ FIX: –ù–ï —Ç—Ä–∏–≥–≥–µ—Ä–∏–º —Ñ–æ—Ä–º—É –≤ –∞–¥–º–∏–Ω–∫–µ!
    if (pathname.startsWith("/admin")) {
      console.log("üîí –í –∞–¥–º–∏–Ω–∫–µ - —Ñ–æ—Ä–º–∞ –Ω–µ —Ç—Ä–∏–≥–≥–µ—Ä–∏—Ç—Å—è");
      return;
    }
    console.log("‚è±Ô∏è –¢–∞–π–º–µ—Ä –Ω–∞ –ø–æ–∫–∞–∑ —Ñ–æ—Ä–º—ã –∑–∞–ø—É—â–µ–Ω: 30 —Å–µ–∫");

    // ‚úÖ FIX: setTimeout –≤–º–µ—Å—Ç–æ setInterval (–Ω—É–∂–µ–Ω —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑)
    timerRef.current = setTimeout(() => {
      if (!hasTriggeredRef.current) {
        console.log("üìã –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –ø–æ —Ç–∞–π–º–µ—Ä—É");
        setVisible(true);
        hasTriggeredRef.current = true; // ‚úÖ –û—Ç–º–µ—á–∞–µ–º —á—Ç–æ —É–∂–µ –ø–æ–∫–∞–∑–∞–ª–∏
      }
    }, 30000); // 30 —Å–µ–∫—É–Ω–¥

    // ‚úÖ FIX: –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
    return () => {
      if (timerRef.current) {
        clearTimeout(timerRef.current);
        console.log("üßπ –¢–∞–π–º–µ—Ä –æ—á–∏—â–µ–Ω");
      }
    };
  }, [isVisible]); // ‚úÖ FIX: –î–æ–±–∞–≤–∏–ª–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å isVisible

  // ========== –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò ==========
  const handleChange = (
    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>
  ) => {
    setForm({ ...form, [e.target.name]: e.target.value });
  };

  const handleOpenChange = (open: boolean) => {
    setVisible(open);
    console.log(`üîÑ Dialog ${open ? "–æ—Ç–∫—Ä—ã—Ç" : "–∑–∞–∫—Ä—ã—Ç"}`);
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setLoading(true);
    setSuccess(false);

    try {
      const res = await fetch("/api/contact", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(form),
      });

      if (res.ok) {
        console.log("‚úÖ –§–æ—Ä–º–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞");
        setSuccess(true);
        setForm({ name: "", phone: "", email: "", message: "", method: "" });

        // ‚úÖ FIX: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => {
          setVisible(false);
        }, 2000);
      } else {
        console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ");
        alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ");
      }
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:", error);
      alert("–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è");
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="max-w-md">
      <SlidingButton
        onClick={() => {
          console.log("üëÜ –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ '–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É'");
          setVisible(true);
        }}
      >
        {visible ? "–°–∫—Ä—ã—Ç—å —Ñ–æ—Ä–º—É" : "–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É"}
      </SlidingButton>

      {visible && (
        <Dialog open={visible} onOpenChange={handleOpenChange}>
          <DialogContent className="max-w-md">
            <DialogHeader>
              <DialogTitle className="text-center">–û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É</DialogTitle>
              <DialogDescription className="text-center text-sm text-muted-foreground">
                –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è
              </DialogDescription>
            </DialogHeader>

            <form onSubmit={handleSubmit} className="space-y-4">
              <Input
                name="name"
                value={form.name}
                onChange={handleChange}
                placeholder="–í–∞—à–µ –∏–º—è"
                required
                disabled={loading}
              />
              <Input
                name="phone"
                value={form.phone}
                onChange={handleChange}
                placeholder="–¢–µ–ª–µ—Ñ–æ–Ω"
                required
                disabled={loading}
              />
              <Input
                name="email"
                value={form.email}
                onChange={handleChange}
                placeholder="Email"
                disabled={loading}
              />
              <Select
                required
                value={form.method}
                onValueChange={(value) => setForm({ ...form, method: value })}
                disabled={loading}
              >
                <SelectTrigger className="w-full">
                  <SelectValue placeholder="–°–ø–æ—Å–æ–± —Å–≤—è–∑–∏" />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="telegram">üí¨ Telegram</SelectItem>
                  <SelectItem value="whatsapp">üí¨ WhatsApp</SelectItem>
                  <SelectItem value="phone">‚òéÔ∏è –ó–≤–æ–Ω–æ–∫</SelectItem>
                </SelectContent>
              </Select>
              <Textarea
                name="message"
                value={form.message}
                onChange={handleChange}
                placeholder="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∏–ª–∏ –º–æ–¥–µ–ª—å –∞–≤—Ç–æ"
                rows={4}
                disabled={loading}
              />
              <SlidingButton
                type="submit"
                disabled={loading || !form.name || !form.phone || !form.method}
                className="w-full"
              >
                {loading ? "‚è≥ –û—Ç–ø—Ä–∞–≤–∫–∞..." : "‚úâÔ∏è –û—Ç–ø—Ä–∞–≤–∏—Ç—å"}
              </SlidingButton>
              {success && (
                <p className="text-green-600 text-sm text-center font-bold">
                  ‚úÖ –ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞
                </p>
              )}
            </form>
            <hr />

            <div>
              {" "}
              <SocialRow />
              {/* <a
                  href="https://www.tiktok.com/@kmotorrss"
                  target="_blank"
                  rel="noopener noreferrer"
                  className="hover:text-gray-800"
                >
                  <FaTiktok />
                </a> */}
            </div>
          </DialogContent>
        </Dialog>
      )}
    </div>
  );
}
