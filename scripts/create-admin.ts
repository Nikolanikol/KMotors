// üî¥ –í–ê–ñ–ù–û: –ó–∞–≥—Ä—É–∂–∞–µ–º .env.local –î–û –≤—Å–µ–≥–æ –æ—Å—Ç–∞–ª—å–Ω–æ–≥–æ!
require('dotenv').config({ path: '.env.local' })

const readline = require('readline')
const bcrypt = require('bcryptjs')
const { createClient } = require('@supabase/supabase-js')

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã
if (!process.env.NEXT_PUBLIC_SUPABASE_URL) {
  console.error('‚ùå –û–®–ò–ë–ö–ê: .env.local –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω!')
  console.error('   –°–∫–æ–ø–∏—Ä—É–π .env.example –≤ .env.local –∏ –∑–∞–ø–æ–ª–Ω–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ')
  process.exit(1)
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Supabase
const supabaseServer = createClient(
  process.env.NEXT_PUBLIC_SUPABASE_URL,
  process.env.SUPABASE_SERVICE_ROLE_KEY
)

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout,
})

const question = (prompt) => {
  return new Promise(resolve => {
    rl.question(prompt, resolve)
  })
}

async function getAdminByEmail(email) {
  const { data, error } = await supabaseServer
    .from('admins')
    .select('*')
    .eq('email', email)
    .single()

  if (error && error.code !== 'PGRST116') throw error
  return data || null
}

async function hashPassword(password) {
  return bcrypt.hash(password, 10)
}

async function createAdmin(email, password) {
  const passwordHash = await hashPassword(password)

  const { data, error } = await supabaseServer
    .from('admins')
    .insert([{ email, password_hash: passwordHash }])
    .select()
    .single()

  if (error) throw new Error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∞–¥–º–∏–Ω–∞: ${error.message}`)
  return data
}

async function main() {
  console.log('\nüîê === –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ KMotors === üîê\n')

  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    if (!process.env.NEXT_PUBLIC_SUPABASE_URL || !process.env.SUPABASE_SERVICE_ROLE_KEY) {
      console.error('‚ùå –û—à–∏–±–∫–∞: –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è Supabase')
      console.error('   –ü—Ä–æ–≤–µ—Ä—å .env.local —Ñ–∞–π–ª:')
      console.error('   - NEXT_PUBLIC_SUPABASE_URL')
      console.error('   - SUPABASE_SERVICE_ROLE_KEY')
      rl.close()
      process.exit(1)
    }

    console.log('‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã\n')

    const email = await question('üìß –í–≤–µ–¥–∏—Ç–µ email –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: ')
    const password = await question('üîë –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å: ')
    const passwordConfirm = await question('üîë –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–∞—Ä–æ–ª—å: ')

    // –ü—Ä–æ–≤–µ—Ä–∫–∏
    if (!email || !password) {
      console.error('‚ùå Email –∏ –ø–∞—Ä–æ–ª—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã')
      rl.close()
      process.exit(1)
    }

    if (password !== passwordConfirm) {
      console.error('‚ùå –ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç')
      rl.close()
      process.exit(1)
    }

    if (password.length < 6) {
      console.error('‚ùå –ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 6 —Å–∏–º–≤–æ–ª–æ–≤')
      rl.close()
      process.exit(1)
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ
    console.log('\n‚è≥ –ü—Ä–æ–≤–µ—Ä—è–µ–º email –≤ –ë–î...')
    const existing = await getAdminByEmail(email)
    if (existing) {
      console.error('‚ùå –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å —ç—Ç–∏–º email —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
      rl.close()
      process.exit(1)
    }

    // –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    console.log('‚è≥ –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...')
    const admin = await createAdmin(email, password)

    console.log('\n‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!')
    console.log(`üìß Email: ${admin.email}`)
    console.log(`üÜî ID: ${admin.id}`)
    console.log(`üìÖ –°–æ–∑–¥–∞–Ω: ${new Date(admin.created_at).toLocaleString('ru-RU')}`)
    console.log('\nüí° –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–π—Ç–∏ –Ω–∞ /admin/login —Å —ç—Ç–∏–º–∏ —É—á–µ—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏')
    console.log('üí° URL: http://localhost:3000/admin/login\n')

    rl.close()
    process.exit(0)
  } catch (error) {
    console.error('\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:')
    console.error(error.message || error)
    console.error('\nüîç –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:')
    console.error('   1. .env.local –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω')
    console.error('   2. –¢–∞–±–ª–∏—Ü–∞ admins –Ω–µ —Å–æ–∑–¥–∞–Ω–∞ –≤ Supabase')
    console.error('   3. –ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Supabase')
    rl.close()
    process.exit(1)
  }
}

main()